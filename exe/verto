#!/usr/bin/env ruby
# frozen_string_literal: true

Signal.trap('INT') { exit 2 }

require_relative '../lib/verto'

vertofile_path = ENV['VERTOFILE_PATH'] || Pathname.new(Dir.pwd).join('Vertofile').to_s
begin
  Verto::DSL.load_file(vertofile_path) if File.exist?(vertofile_path)

  Verto::MainCommand.start(ARGV)

# TODO: Check why we can't handle this error on CliHelpers
rescue TTY::Reader::InputInterrupt
# TODO: Improve error Message Handling
rescue Verto::ExitError => e
  Verto.stderr.puts e.message
  Verto.stderr.puts 'Exiting Verto...'
  exit 1
end
